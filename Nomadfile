job "ctf-dashboard" {
  datacenters = ["scs"]

  group "ctf-backend" {
    affinity {
      attribute = "${node.unique.name}"
      value     = "nomad_client_2"
      weight    = 100
    }

    network {
      mode = "bridge"

      // port "backend" {
      //   to = 4040
      // }
    }

    service {
      name = "ctf-backend"
      // port = "backend"

      // tags = [
      //   "traefik.enable=true",
      //   "traefik.http.routers.ctf-backend.rule=Host(`api.ctf.h4tt.ca`)",
      //   "traefik.http.routers.ctf-backend.entrypoints=https",
      //   "traefik.http.routers.ctf-backend.tls.certresolver=letsencrypt"
      // ]

      connect {
        sidecar_service {
          proxy {
            upstreams {
              destination_name = "ctf-postgres"
              local_bind_port  = 5432
            }
          }
        }
      }
    }

    task "actix-backend" {
      driver = "docker"

      config {
        image = "ghcr.io/angelonfira/egui-ctf/ctf-backend:latest"
        // ports = ["backend"]
      }

      resources {
        cpu    = 1000
        memory = 1000
      }

      env {
        test = 12
        RUST_BACKTRACE = 1
      }
    }
  }

  group "ctf-discord-bot" {
    affinity {
      attribute = "${node.unique.name}"
      value     = "nomad_client_2"
      weight    = 100
    }

    network {
      mode = "bridge"
    }

    service {
      name = "discord-bot"

      connect {
        sidecar_service {
          proxy {
            upstreams {
              destination_name = "ctf-postgres"
              local_bind_port  = 5432
            }
          }
        }
      }
    }

    task "serenity-bot" {
      driver = "docker"

      config {
        image = "ghcr.io/angelonfira/egui-ctf/ctf-discord-bot:latest"
      }

      resources {
        cpu    = 1000
        memory = 1000
      }

      env {
        test = 12
      }

      template {
        data = <<EOH
DISCORD_TOKEN="{{ key "ctf-discord-api-key" }}"
GUILD_ID="{{ key "ctf-guild-id" }}"
EOH

        destination = "secrets/file.env"
        env         = true
      }
    }
  }

  group "database" {
    affinity {
      attribute = "${node.unique.name}"
      value     = "nomad_client_2"
      weight    = 100
    }

    network {
      mode = "bridge"
    }

    service {
      name = "ctf-postgres"
      port = "5432"

      connect {
        sidecar_service {}
      }
    }

    task "postgres" {
      driver = "docker"

      config {
        image = "postgres:15"
        ports = ["postgres"]
      }

      env {
        POSTGRES_USER     = "postgres"
        POSTGRES_PASSWORD = "postgres"
        POSTGRES_DB       = "postgres"
      }

      resources {
        cpu    = 1000
        memory = 1000
      }
    }
  }
}